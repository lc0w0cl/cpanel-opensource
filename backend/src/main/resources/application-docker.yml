spring:
  application:
    name: cpanel

  # 数据源配置 - Docker环境
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用环境变量配置数据库连接
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:cpanel}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:cpanel_user}
    password: ${DB_PASSWORD:cpanel_password}
    # 连接池配置
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
      minimum-idle: 5
      connection-test-query: SELECT 1

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true

# 服务器配置
server:
  port: 8080
  # 启用压缩
  compression:
    enabled: true
    mime-types: text/html,text/css,application/javascript,application/json,image/svg+xml
    min-response-size: 1024
  # 错误页面配置
  error:
    whitelabel:
      enabled: false

# 文件上传配置
file:
  upload:
    # Docker容器内的上传路径
    path: /app/uploads/
    # 访问URL前缀
    url-prefix: /uploads/
    # 允许的文件类型
    allowed-types: jpg,jpeg,png,gif,bmp,webp,svg
    # 最大文件大小（字节）
    max-size: 10485760

# JWT配置
jwt:
  # JWT密钥（生产环境建议使用环境变量）
  secret: ${JWT_SECRET:cpanel-jwt-secret-key-for-authentication-system-2024-very-long-secret-docker}
  # 访问token过期时间（毫秒）- 24小时
  expiration: ${JWT_EXPIRATION:86400000}
  # 刷新token过期时间（毫秒）- 7天
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
  # 发行者
  issuer: ${JWT_ISSUER:cpanel}
  # 受众
  audience: ${JWT_AUDIENCE:cpanel-users}

# 日志配置
logging:
  level:
    com.clover.cpanel: ${LOG_LEVEL:INFO}
    org.springframework.web: ${LOG_LEVEL:INFO}
    org.springframework.security: ${LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/application.log
    max-size: 100MB
    max-history: 30

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  health:
    db:
      enabled: true
